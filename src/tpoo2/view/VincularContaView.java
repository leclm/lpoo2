package tpoo2.view;

import java.awt.event.ActionListener;
import java.util.Collections;
import java.util.List;
import tpoo2.controller.CadastrarClienteController;
import tpoo2.controller.ManipularContaController;
import tpoo2.controller.VincularContaController;
import tpoo2.dao.ClienteDao;
import tpoo2.dao.ContaDao;
import tpoo2.model.Cliente;
import tpoo2.model.Conta;
import tpoo2.model.ContaCorrente;
import tpoo2.model.ContaInvestimento;

public class VincularContaView extends javax.swing.JFrame {
    private final ModeloTabelaCliente modelo = new ModeloTabelaCliente();
    
    private int linhaClicada = -1;
    
    /*
    *** CONSTRUTOR
    */
    public VincularContaView() {
        initComponents();
        tabelaVincularConta.setModel(modelo);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabVincularConta = new javax.swing.JPanel();
        selecioneCliente = new javax.swing.JLabel();
        scroll1 = new javax.swing.JScrollPane();
        tabelaVincularConta = new javax.swing.JTable();
        selecioneTipoConta = new javax.swing.JLabel();
        cbContas = new javax.swing.JComboBox<>();
        label1VincularConta = new javax.swing.JLabel();
        tLabel1VincularConta = new javax.swing.JTextField();
        label2VincularConta = new javax.swing.JLabel();
        tLabel2VincularConta = new javax.swing.JTextField();
        label3VincularConta = new javax.swing.JLabel();
        tLabel3VincularConta = new javax.swing.JTextField();
        tLabel4VincularConta = new javax.swing.JTextField();
        incluirConta = new java.awt.Button();
        bCadastrarCliente = new javax.swing.JButton();
        bManipularConta = new javax.swing.JButton();
        label4VincularConta = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tabVincularConta.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tabVincularContaAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        selecioneCliente.setText("Selecione um cliente:");

        tabelaVincularConta.setModel(modelo);
        tabelaVincularConta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaVincularContaMouseClicked(evt);
            }
        });
        scroll1.setViewportView(tabelaVincularConta);

        selecioneTipoConta.setText("Escolha qual ser√° o tipo de conta do cliente selecionado na tabela:");

        cbContas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Conta Corrente", "Conta Investimento" }));
        cbContas.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbContasItemStateChanged(evt);
            }
        });

        incluirConta.setBackground(new java.awt.Color(33, 136, 56));
        incluirConta.setForeground(new java.awt.Color(240, 240, 240));
        incluirConta.setLabel("Incluir");

        bCadastrarCliente.setBackground(new java.awt.Color(33, 136, 56));
        bCadastrarCliente.setForeground(new java.awt.Color(240, 240, 240));
        bCadastrarCliente.setText("Cadastrar Cliente");
        bCadastrarCliente.setAutoscrolls(true);
        bCadastrarCliente.setBorder(null);
        bCadastrarCliente.setMaximumSize(new java.awt.Dimension(92, 20));
        bCadastrarCliente.setMinimumSize(new java.awt.Dimension(92, 20));
        bCadastrarCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bCadastrarClienteMouseClicked(evt);
            }
        });

        bManipularConta.setBackground(new java.awt.Color(224, 168, 0));
        bManipularConta.setForeground(new java.awt.Color(0, 0, 0));
        bManipularConta.setText("Manipular Conta");
        bManipularConta.setBorder(null);
        bManipularConta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bManipularContaMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout tabVincularContaLayout = new javax.swing.GroupLayout(tabVincularConta);
        tabVincularConta.setLayout(tabVincularContaLayout);
        tabVincularContaLayout.setHorizontalGroup(
            tabVincularContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
            .addGroup(tabVincularContaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(tabVincularContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabVincularContaLayout.createSequentialGroup()
                        .addGroup(tabVincularContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(selecioneTipoConta)
                            .addComponent(cbContas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(tabVincularContaLayout.createSequentialGroup()
                                .addComponent(label1VincularConta)
                                .addGap(18, 18, 18)
                                .addComponent(tLabel1VincularConta))
                            .addGroup(tabVincularContaLayout.createSequentialGroup()
                                .addComponent(label2VincularConta)
                                .addGap(18, 18, 18)
                                .addComponent(tLabel2VincularConta))
                            .addGroup(tabVincularContaLayout.createSequentialGroup()
                                .addComponent(label3VincularConta)
                                .addGap(18, 18, 18)
                                .addGroup(tabVincularContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tLabel4VincularConta, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tLabel3VincularConta, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(tabVincularContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bManipularConta, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(bCadastrarCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabVincularContaLayout.createSequentialGroup()
                        .addGroup(tabVincularContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selecioneCliente)
                            .addComponent(incluirConta, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        tabVincularContaLayout.setVerticalGroup(
            tabVincularContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(tabVincularContaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selecioneCliente)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scroll1, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(tabVincularContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(tabVincularContaLayout.createSequentialGroup()
                        .addComponent(selecioneTipoConta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbContas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(tabVincularContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(label1VincularConta)
                            .addComponent(tLabel1VincularConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(tabVincularContaLayout.createSequentialGroup()
                        .addComponent(bCadastrarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bManipularConta, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(tabVincularContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label2VincularConta)
                    .addComponent(tLabel2VincularConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(tabVincularContaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(label3VincularConta)
                    .addComponent(tLabel3VincularConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(tLabel4VincularConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(incluirConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(84, 84, 84)
                .addComponent(label4VincularConta)
                .addContainerGap(699, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 77, Short.MAX_VALUE)
                    .addComponent(tabVincularConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 78, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(421, Short.MAX_VALUE)
                .addComponent(label4VincularConta, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(tabVincularConta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*
    *** CONTROLLER
    */
    public void setController(VincularContaController controller) {
        for (ActionListener al : incluirConta.getActionListeners()) {
            incluirConta.removeActionListener(al);
        }
        
        incluirConta.addActionListener(e -> controller.IncluirConta());
    }
    
    
    /*
    *** INIT
    */
    public void initView() {
        java.awt.EventQueue.invokeLater(() -> this.setVisible(true));
        esconderComponentesVincularConta();
    }
    
    private void esconderComponentesVincularConta() {
        selecioneTipoConta.setVisible(false);
        cbContas.setVisible(false);
        
        label1VincularConta.setText("");
        label2VincularConta.setText("");
        label3VincularConta.setText("");
        label4VincularConta.setText("");
        
        tLabel1VincularConta.setText("");
        tLabel2VincularConta.setText("");
        tLabel3VincularConta.setText("");
        tLabel4VincularConta.setText("");
        
        tLabel1VincularConta.setVisible(false);
        tLabel2VincularConta.setVisible(false);
        tLabel3VincularConta.setVisible(false);
        tLabel4VincularConta.setVisible(false);
        
        incluirConta.setVisible(false);
    }
    
    
    /*
    *** CLICAR NA TABELA
    */
    private void tabelaVincularContaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaVincularContaMouseClicked
        //Pega a linha clicada
        linhaClicada = tabelaVincularConta.rowAtPoint(evt.getPoint());
        
        //Pega o cliente da linha clicada
        Cliente cliente = modelo.getCliente(linhaClicada);
        
        int verificarConta = 0;
                
        if (cliente.getConta() != null) {
            try {
                verificarConta = cliente.getConta().get(0).getTipoConta();
            } catch(IndexOutOfBoundsException ex) {
                verificarConta = 0;
            }
        } else {
            verificarConta = 0;
        }
        
        cbContas.removeAllItems();
        cbContas.addItem("Selecione");
        
        switch (verificarConta) {
            case 1:
                cbContas.addItem("Conta Corrente");
                break;
            case 2:
                cbContas.addItem("Conta Investimento");
                break;
            case 0:
                cbContas.addItem("Conta Corrente");
                cbContas.addItem("Conta Investimento");
                break;
            default: break;
        }
        
        selecioneTipoConta.setVisible(true);
        cbContas.setVisible(true);
        tabVincularConta.revalidate();
        tabVincularConta.repaint();
    }//GEN-LAST:event_tabelaVincularContaMouseClicked

    private void cbContasItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbContasItemStateChanged
        //Pega qual tipo de conta foi escolhida
        if (cbContas.getSelectedItem() != null) {
            String comboConta = cbContas.getSelectedItem().toString();
        
            switch (comboConta) {
                case "Conta Corrente":
                    label1VincularConta.setText("Dep√≥sito inicial (valor em R$):");
                    label2VincularConta.setText("Limite da conta (valor em R$):");
                    label3VincularConta.setText("");
                    label4VincularConta.setText("");

                    tLabel1VincularConta.setVisible(true);
                    tLabel2VincularConta.setVisible(true);
                    tLabel3VincularConta.setVisible(false);
                    tLabel4VincularConta.setVisible(false);
                    
                    incluirConta.setVisible(true);

                    break;
                case "Conta Investimento":
                    label1VincularConta.setText("Montante M√≠nimo (valor em R$):");
                    label2VincularConta.setText("Dep√≥sito M√≠nimo (valor em R$):");
                    label3VincularConta.setText("Dep√≥sito Inicial (valor em R$):");
                    label4VincularConta.setText("Saque M√≠nimo (valor em R$):");

                    tLabel1VincularConta.setVisible(true);
                    tLabel2VincularConta.setVisible(true);
                    tLabel3VincularConta.setVisible(true);
                    tLabel4VincularConta.setVisible(true);
                    
                    incluirConta.setVisible(true);

                    break;
                default: break;
            }
            
            tabVincularConta.revalidate();
            tabVincularConta.repaint();
        }
    }//GEN-LAST:event_cbContasItemStateChanged

    
    /*
    *** PEGAR CONTA DO FORMUL√ÅRIO  
    */
    public Conta getContaFormulario() { //RETORNA A CONTA PARA O CONTROLLER
        //Pega o cliente da linha clicada
        Cliente cliente = modelo.getCliente(linhaClicada);

        //Pega qual tipo de conta foi escolhida
        String comboConta = cbContas.getSelectedItem().toString();

        switch (comboConta) {
            case "Conta Corrente":
                Cliente donoCorrente = cliente;
                double valorCorrente = Double.parseDouble(tLabel1VincularConta.getText());
                double limiteDaConta = Double.parseDouble(tLabel2VincularConta.getText());
                
                return new ContaCorrente(donoCorrente, valorCorrente, limiteDaConta);
                
            case "Conta Investimento":
                Cliente donoInvestimento = cliente;
                double valorInvestimento = Double.parseDouble(tLabel3VincularConta.getText());
                double depositoMinimo = Double.parseDouble(tLabel2VincularConta.getText());
                double montanteMinimo = Double.parseDouble(tLabel1VincularConta.getText());
                double saqueMinimo = Double.parseDouble(tLabel4VincularConta.getText());
                
                return new ContaInvestimento(donoInvestimento, valorInvestimento, saqueMinimo, depositoMinimo, montanteMinimo);
            
            default: return null;
        }
    }
    
    
    /*
    *** ALTERAR VIEW
    */
    private void bCadastrarClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bCadastrarClienteMouseClicked
        CadastrarClienteView cadastrarCliente = new CadastrarClienteView();
        ClienteDao clienteDao = new ClienteDao();
        CadastrarClienteController controller = new CadastrarClienteController(cadastrarCliente, clienteDao);
        
        cadastrarCliente.initView();
        this.setVisible(false);
    }//GEN-LAST:event_bCadastrarClienteMouseClicked

    private void bManipularContaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bManipularContaMouseClicked
        ManipularContaView manipularConta = new ManipularContaView();
        ContaDao contaDao = new ContaDao();
        ManipularContaController controller = new ManipularContaController(manipularConta, contaDao);
        
        manipularConta.initView();
        this.setVisible(false);
    }//GEN-LAST:event_bManipularContaMouseClicked

    
    /*
    *** LISTAR
    */
    //LISTAR OS CLIENTES INSERIDOS NO BANCO DE DADOS
    private void tabVincularContaAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tabVincularContaAncestorAdded
        ContaDao contaDao = new ContaDao();
        VincularContaController vincularConta = new VincularContaController(this, contaDao);
        vincularConta.getClientes();
    }//GEN-LAST:event_tabVincularContaAncestorAdded
                                     
    public void listarClienteView(List<Cliente> clientes) {
        Collections.sort(clientes, (o1, o2) -> Integer.toString(o1.getId()).compareTo(Integer.toString(o2.getId())));
        modelo.atualizarTabela(clientes);
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VincularContaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VincularContaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VincularContaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VincularContaView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VincularContaView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCadastrarCliente;
    private javax.swing.JButton bManipularConta;
    private javax.swing.JComboBox<String> cbContas;
    private java.awt.Button incluirConta;
    private javax.swing.JLabel label1VincularConta;
    private javax.swing.JLabel label2VincularConta;
    private javax.swing.JLabel label3VincularConta;
    private javax.swing.JLabel label4VincularConta;
    private javax.swing.JScrollPane scroll1;
    private javax.swing.JLabel selecioneCliente;
    private javax.swing.JLabel selecioneTipoConta;
    private javax.swing.JTextField tLabel1VincularConta;
    private javax.swing.JTextField tLabel2VincularConta;
    private javax.swing.JTextField tLabel3VincularConta;
    private javax.swing.JTextField tLabel4VincularConta;
    private javax.swing.JPanel tabVincularConta;
    private javax.swing.JTable tabelaVincularConta;
    // End of variables declaration//GEN-END:variables
}
